name: release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - id: vars
        run: |
          VERSION="${GITHUB_REF_NAME#v}"

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "major=$(echo $VERSION | cut -d. -f1)" >> $GITHUB_OUTPUT
          echo "minor=$(echo $VERSION | cut -d. -f1-2)" >> $GITHUB_OUTPUT

      - run: git --version

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - run: go version

      - name: Install Docker Buildx
        uses: docker/setup-buildx-action@v3

      - run: docker buildx version

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.9.1

      - run: cosign version

      - name: Install Syft
        uses: anchore/sbom-action/download-syft@v0.20.2

      - run: syft version

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: "goreleaser"
          version: "~> v2"
          install-only: true

      - run: goreleaser --version

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - run: python --version

      - name: Install Cloudsmith CLI
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.3
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}

      - run: cloudsmith --version

      - run: goreleaser check
      - run: goreleaser healthcheck

      - name: Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: goreleaser release --clean

      - name: Login Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Publish
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
        run: |
          find . -type f -name "*.apk" | xargs -P $(nproc) -n 1 -I{} sh -c 'cloudsmith push alpine --republish ${{ github.repository }}/alpine/any-version "$1"' _ {}
          find . -type f -name "*.deb" | xargs -P $(nproc) -n 1 -I{} sh -c 'cloudsmith push deb --republish ${{ github.repository }}/any-distro/any-version "$1"' _ {}
          find . -type f -name "*.rpm" | xargs -P $(nproc) -n 1 -I{} sh -c 'cloudsmith push rpm --republish ${{ github.repository }}/any-distro/any-version "$1"' _ {}

          docker push ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.version }}
          docker push ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.major }}.${{ steps.vars.outputs.minor }}
          docker push ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.major }}
